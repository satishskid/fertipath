
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/fertility-pathway-planner/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Patient {
  id          String   @id @default(cuid())
  patientCode String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Female partner profile
  femaleAge        String?
  femaleCycle      String?
  femaleConditions String[] // Array of condition IDs
  femaleLifestyle  Json?    // BMI, smoking, alcohol

  // Male partner profile
  maleAge        String?
  maleConditions String[]

  // Couple's fertility history
  timeTrying           String?
  previousTreatments   String?
  fertilityHistory     Json?

  // Holistic assessment
  emotionalState   String?
  financialComfort String?

  // Location-based features
  zipCode             String?
  preferredGender     String? // male, female, no_preference
  experienceLevel     String? // junior, experienced, senior
  specialization      String?
  locationData        Json?   // coordinates, nearby clinics

  // Journey tracking
  currentPhase        Int      @default(1)
  completedPhases     Int[]
  journeyStarted      DateTime @default(now())
  estimatedCompletion DateTime?
  interfaceMode       String   @default("patient") // patient, doctor

  // Medical files and analysis
  medicalFiles    MedicalFile[]
  analysisResults AnalysisResult[]
  timelines       Timeline[]
  pathways        TreatmentPathway[]
  recommendations ClinicalRecommendation[]
  journeySteps    JourneyStep[]
  doctorRecommendations DoctorRecommendation[]
  storyBoard      StoryBoard[]
  
  // Enhanced features relationships
  patientChoices        PatientChoice[]
  manualDataEntries     ManualDataEntry[]
  personalizedTimelines PersonalizedTimeline[]
  remoteCareSession     RemoteCareSession[]
  providerReviews       ProviderReview[]
  journeyMilestones     PatientJourneyMilestone[]

  @@map("patients")
}

model MedicalFile {
  id        String   @id @default(cuid())
  patientId String
  fileName  String
  originalFileName String // Store original filename for WhatsApp images
  fileType  String
  fileSize  Int
  fileUrl   String
  category  String   // 'document', 'ultrasound', 'sperm_analysis', 'embryo_image', 'whatsapp_image'
  uploadedAt DateTime @default(now())
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  // Enhanced AI extraction results
  extractedData Json?
  analysisStatus String @default("pending") // pending, processing, completed, failed
  errorMessage  String? // Store specific error details
  processingTime Int? // Time taken for AI processing in milliseconds
  confidence    Float? // AI confidence score
  
  @@map("medical_files")
}

model Timeline {
  id        String   @id @default(cuid())
  patientId String
  date      DateTime
  title     String
  category  String   // consultation, lab_results, treatment, procedure
  details   String?
  sourceFile String? // Reference to source medical file
  extractedData Json?
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("timelines")
}

model AnalysisResult {
  id        String   @id @default(cuid())
  patientId String
  fileId    String?
  analysisType String  // document_analysis, vision_analysis, pathway_calculation
  results   Json
  confidence Float?
  createdAt DateTime @default(now())
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("analysis_results")
}

model TreatmentPathway {
  id          String   @id @default(cuid())
  patientId   String
  name        String   // IUI, FET, IVF_ICSI, IVF_PGT_A
  description String
  successRate Float
  timeline    String
  costMin     Int      // in INR
  costMax     Int      // in INR
  suitability Float
  pros        String[]
  cons        String[]
  recommendation String?
  priority    Int      @default(0)
  createdAt   DateTime @default(now())
  
  // Enhanced pathway features
  evidenceLevel    String?  // high, moderate, low
  researchLinks    String[] // Array of research paper URLs
  alternativePaths String[] // Alternative treatment options
  
  // Telemedicine integration
  telemedicineSteps Json? // Which steps can be done remotely
  inPersonSteps     Json? // Which steps require in-person visit
  remoteMonitoring  Boolean @default(false)
  virtualConsults   Boolean @default(false)
  
  // Journey integration
  estimatedDuration String? // "2-3 months"
  preparationSteps  Json?   // What patient needs to prepare
  milestones        Json?   // Key checkpoints in treatment
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("treatment_pathways")
}

model AIConfiguration {
  id        String   @id @default(cuid())
  provider  String   @unique // 'gemini', 'gemma3', 'fallback'
  isActive  Boolean  @default(false)
  config    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("ai_configurations")
}

model ClinicalRecommendation {
  id             String   @id @default(cuid())
  patientId      String
  category       String   // additional_tests, lifestyle, treatment_considerations
  title          String
  description    String
  priority       String   // high, medium, low
  source         String   // ai_analysis, clinical_guidelines, patient_history
  isActionable   Boolean  @default(true)
  createdAt      DateTime @default(now())
  
  // Enhanced recommendation features
  evidenceLevel  String?  // high, moderate, low
  researchBasis  String?  // Supporting research explanation
  patientView    String?  // Simplified explanation for patients
  doctorView     String?  // Detailed clinical explanation
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("clinical_recommendations")
}

// New models for enhanced features

model JourneyStep {
  id          String   @id @default(cuid())
  patientId   String
  step        Int      // Step number in the journey
  title       String
  description String
  status      String   @default("upcoming") // upcoming, current, completed, skipped
  category    String   // consultation, test, procedure, medication, lifestyle
  
  // Timeline information
  scheduledDate    DateTime?
  completedDate    DateTime?
  estimatedDuration String? // "30 minutes", "2 hours", "1 day"
  
  // Telemedicine support
  canBeRemote     Boolean @default(false)
  requiresInPerson Boolean @default(true)
  virtualOptions  Json?   // Available virtual consultation options
  
  // Patient guidance
  preparationSteps String[] // What patient needs to do beforehand
  whatToExpect     String?  // What happens during this step
  afterCare        String?  // Post-step care instructions
  
  // Story board integration
  iconName        String?  // Lucide icon name for visualization
  illustrationUrl String?  // URL to illustration image
  patientTips     String[] // Patient-friendly tips
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("journey_steps")
}

model DoctorRecommendation {
  id           String   @id @default(cuid())
  patientId    String
  doctorName   String
  clinicName   String
  specialization String
  gender       String   // male, female
  experience   String   // junior, experienced, senior
  
  // Location information
  address      String
  zipCode      String
  distance     Float?   // Distance from patient in km
  coordinates  Json?    // Lat/lng coordinates
  
  // Contact information
  phoneNumber  String?
  email        String?
  website      String?
  
  // Ratings and reviews
  rating       Float?   // Out of 5
  reviewCount  Int      @default(0)
  
  // Availability
  acceptsInsurance Boolean @default(false)
  availableSlots   Json?   // Available appointment slots
  averageWaitTime  String? // "2 weeks", "1 month"
  
  // Telemedicine support
  offersTelemedicine Boolean @default(false)
  virtualConsultFee  Int?    // Fee for virtual consultation
  
  // Cost information
  consultationFee Int?
  treatmentCosts  Json? // Estimated costs for different treatments
  
  // Match score
  matchScore   Float?  // How well this doctor matches patient preferences
  matchReason  String? // Why this doctor was recommended
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("doctor_recommendations")
}

model StoryBoard {
  id          String   @id @default(cuid())
  patientId   String
  chapter     Int      // Chapter number in the story
  title       String
  subtitle    String?
  description String
  
  // Visual elements
  illustrationUrl String?
  iconName        String?  // Lucide icon name
  colorTheme      String?  // Color theme for this chapter
  
  // Content for different audiences
  patientContent String   // Simple, encouraging content for patients
  partnerContent String?  // Content addressing partner concerns
  familyContent  String?  // Content for family members
  
  // Interactive elements
  actionItems    String[] // Actionable steps for patients
  checklistItems String[] // Checklist items for this chapter
  resources      Json?    // Additional resources and links
  
  // Timeline integration
  estimatedTimeframe String? // "Week 1-2", "Month 2-3"
  dependencies       String[] // What needs to be completed first
  
  // Emotional support
  encouragementNote String?  // Motivational message
  commonConcerns    String[] // Address common patient concerns
  supportTips       String[] // Tips for emotional well-being
  
  // Progress tracking
  isCompleted    Boolean @default(false)
  completedDate  DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("story_board")
}

// New models for enhanced features

model PatientChoice {
  id               String   @id @default(cuid())
  patientId        String
  treatmentPathwayId String
  
  // Choice details
  selectedOption   String   // IUI, IVF, FET, etc.
  choiceReason     String[] // cost, timeline, success_rate, invasiveness, etc.
  reasoning        String?  // Patient's explanation for their choice
  confidence       Float?   // How confident they are (1-10)
  
  // Decision factors importance (1-10 scale)
  costImportance       Int? @default(5)
  timelineImportance   Int? @default(5)
  successRateImportance Int? @default(5)
  invasivenessImportance Int? @default(5)
  
  // Alternative options considered
  alternativesConsidered String[] // Other options they looked at
  
  // Timeline preferences
  preferredStartDate DateTime?
  maxTimelineMonths  Int?     // Maximum timeline they're willing to accept
  
  // Additional preferences
  additionalConcerns String?  // Any other concerns or requirements
  partnerInvolvement String?  // Level of partner support/involvement
  
  // Decision status
  status        String   @default("pending") // pending, confirmed, changed
  decisionDate  DateTime @default(now())
  lastModified  DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("patient_choices")
}

model ManualDataEntry {
  id           String   @id @default(cuid())
  patientId    String
  entryType    String   // lab_results, ultrasound, consultation_notes, etc.
  
  // Data source
  sourceType   String   // manual_entry, copy_paste, form_input
  originalText String?  // Original pasted/entered text
  
  // Structured data
  structuredData Json   // Parsed and structured medical data
  
  // Validation and quality
  isValidated    Boolean @default(false)
  validatedBy    String? // Staff member who validated
  validatedAt    DateTime?
  confidence     Float?  // Confidence in the data accuracy
  
  // Processing details
  aiProcessed    Boolean @default(false)
  aiExtracted    Json?   // AI-extracted structured data
  manualOverride Boolean @default(false) // If manual data overrides AI
  
  // Metadata
  entryDate      DateTime @default(now())
  testDate       DateTime? // Date when the test/procedure was done
  facilityName   String?   // Where the test was done
  doctorName     String?   // Doctor who ordered/performed test
  
  // Timeline integration
  timelineEventId String? // Link to timeline event if created
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("manual_data_entries")
}

model PersonalizedTimeline {
  id               String   @id @default(cuid())
  patientId        String
  treatmentPathway String   // IUI, IVF, FET, etc.
  
  // Timeline details
  totalDuration    String   // "3-4 months"
  startDate        DateTime?
  estimatedEndDate DateTime?
  
  // Milestones and phases
  phases           Json     // Array of phases with dates and tasks
  milestones       Json     // Key milestones with expected dates
  
  // Personalization factors
  patientAge       Int?
  medicalHistory   Json?    // Relevant medical history affecting timeline
  selectedOptions  Json?    // Patient's selected preferences
  
  // Progress tracking
  currentPhase     String?  // Current phase name
  completedPhases  String[] // List of completed phases
  upcomingTasks    Json?    // Next tasks/appointments
  
  // Adaptive timeline
  delays           Json?    // Any delays and reasons
  adjustments      Json?    // Timeline adjustments made
  actualDates      Json?    // Actual vs estimated dates
  
  // Advice and guidance
  phaseAdvice      Json?    // Advice for each phase
  preparationTips  Json?    // Preparation tips for upcoming phases
  recoveryGuidance Json?    // Recovery guidance for procedures
  
  // Status
  isActive         Boolean @default(true)
  status          String   @default("draft") // draft, active, completed, cancelled
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("personalized_timelines")
}

model RemoteCareSession {
  id            String   @id @default(cuid())
  patientId     String
  sessionType   String   // blood_test_upload, consultation, medication_check, etc.
  
  // Session details
  title         String
  description   String?
  category      String   // monitoring, consultation, results_review, etc.
  
  // Remote capabilities
  canBeRemote   Boolean  @default(true)
  requiresInPerson Boolean @default(false)
  
  // Files and uploads
  uploadedFiles Json?    // Files uploaded by patient
  analysisResults Json?  // AI analysis of uploaded files
  
  // Provider review
  reviewedBy    String?  // Provider who reviewed
  reviewedAt    DateTime?
  providerNotes String?  // Provider's notes
  recommendations String? // Provider recommendations
  
  // Follow-up actions
  followUpRequired Boolean @default(false)
  followUpType     String? // in_person_visit, another_remote_session, etc.
  followUpDate     DateTime?
  
  // Communication
  messages      Json?    // Messages between patient and provider
  lastMessage   DateTime?
  
  // Status tracking
  status        String   @default("pending") // pending, in_progress, completed, requires_attention
  priority      String   @default("normal") // low, normal, high, urgent
  
  scheduledDate DateTime?
  completedDate DateTime?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("remote_care_sessions")
}

model ProviderReview {
  id               String   @id @default(cuid())
  patientId        String
  providerId       String   // Staff member ID
  reviewType       String   // file_review, consultation, treatment_plan, etc.
  
  // Review details
  title            String
  findings         String?  // Provider's findings
  recommendations  String?  // Provider's recommendations
  
  // Files reviewed
  reviewedFileIds  String[] // IDs of files reviewed
  
  // Assessment
  urgencyLevel     String   @default("normal") // low, normal, high, urgent
  actionRequired   Boolean  @default(false)
  actionItems      String[] // Specific actions needed
  
  // Treatment impact
  treatmentChanges Boolean  @default(false) // If treatment plan changes needed
  newRecommendations Json? // New treatment recommendations
  
  // Communication
  patientNotified  Boolean  @default(false)
  notificationSent DateTime?
  patientResponse  String?  // Patient's response to review
  
  // Follow-up
  followUpRequired Boolean  @default(false)
  followUpDate     DateTime?
  followUpType     String?  // appointment, remote_session, call, etc.
  
  // Provider details
  providerName     String
  providerRole     String   // doctor, nurse, technician, etc.
  reviewDuration   Int?     // Minutes spent on review
  
  status           String   @default("draft") // draft, submitted, patient_notified
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("provider_reviews")
}

model PatientJourneyMilestone {
  id                String   @id @default(cuid())
  patientId         String
  milestoneType     String   // initial_consultation, first_cycle, transfer, pregnancy_test, etc.
  
  // Milestone details
  title             String
  description       String?
  category          String   // consultation, procedure, test, medication, milestone
  
  // Expected vs actual
  expectedDate      DateTime?
  actualDate        DateTime?
  status            String   @default("upcoming") // upcoming, completed, delayed, skipped
  
  // Progress tracking
  progressPercent   Int      @default(0) // 0-100%
  tasksCompleted    Int      @default(0)
  totalTasks        Int      @default(1)
  
  // Patient experience
  patientNotes      String?  // Patient's notes about this milestone
  satisfactionScore Int?     // 1-10 satisfaction score
  experienceRating  String?  // excellent, good, fair, poor
  
  // Clinical data
  clinicalNotes     String?  // Provider's clinical notes
  outcomes          Json?    // Clinical outcomes/results
  complications     String?  // Any complications noted
  
  // Next steps
  nextMilestone     String?  // Next expected milestone
  preparationNeeded Json?    // What patient needs to prepare
  adviceGiven       String?  // Advice given to patient
  
  // Remote care integration
  wasRemote         Boolean  @default(false)
  remoteSessionId   String?  // Link to remote care session if applicable
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  
  @@map("patient_journey_milestones")
}
